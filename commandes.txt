mkdir srsRAN_rep
cd srsRAN_rep

sudo apt-get install cmake make gcc g++ pkg-config libfftw3-dev libmbedtls-dev libsctp-dev libyaml-cpp-dev libgtest-dev

sudo apt-get install autoconf automake build-essential ccache cmake cpufrequtils doxygen ethtool \
g++ git inetutils-tools libboost-all-dev libncurses5 libncurses5-dev libusb-1.0-0 libusb-1.0-0-dev \
libusb-dev python3-dev python3-mako python3-numpy python3-requests python3-scipy python3-setuptools \
python3-ruamel.yaml

git clone https://github.com/EttusResearch/uhd.git

cd uhd/host
mkdir build
cd build
cmake ../
make
sudo make install
sudo ldconfig

cd
cd srsRAN_rep
sudo apt-get install libzmq3-dev
git clone https://github.com/zeromq/libzmq.git
cd libzmq
./autogen.sh
./configure
make
sudo make install
sudo ldconfig
cd ..

git clone https://github.com/zeromq/czmq.git
cd czmq
./autogen.sh
./configure
make
sudo make install
sudo ldconfig
cd ..

git clone https://github.com/srsran/srsRAN_Project.git
cd srsRAN_Project
mkdir build
cd build
cmake ../ -DENABLE_EXPORT=ON -DENABLE_ZEROMQ=ON
make -j `nproc`
sudo make install
	

cd 
cd srsRAN_rep

sudo apt-get install build-essential cmake libfftw3-dev libmbedtls-dev libboost-program-options-dev libconfig++-dev libsctp-dev

git clone https://github.com/srsRAN/srsRAN_4G.git
cd srsRAN_4G
mkdir build
cd build
cmake ../
make
sudo make install
srsran_install_configs.sh user


cd
cd srsRAN_rep
sudo apt update
sudo apt install gnupg
sudo snap install curl
curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg --dearmor

echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list

sudo apt update
sudo apt install -y mongodb-org
sudo systemctl start mongod
sudo systemctl enable mongod 

sudo add-apt-repository ppa:open5gs/latest
sudo apt update
sudo apt install open5gs
nano /etc/resolv.conf (ajout du dns 8.8.8.8)
systemctl restart NetworkManager 

sudo apt update
sudo apt install -y ca-certificates curl gnupg
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg

NODE_MAJOR=20
echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list

sudo apt update
sudo apt install nodejs -y
curl -fsSL https://open5gs.org/open5gs/assets/webui/install | sudo -E bash -

http://localhost:9999
admin
1423
Télécharger gNB config et UE config dans "srsRAN gNB with srsUE/ZeroMQ-based Setup" dans la VM
sudo gedit ue_zmq.conf
Ajouter un subscriber dans Open5gs et renseigner :
-l'IMSI avec imsi dans ue_zmq.conf
- La Subscriber Key avec la key
- l'Opérateur key avec l'opc
- Le DNN/APN avec srsapn et séléctionner ipv4

sudo gedit gnb_zmq.yaml
autre terminal cd /etc/open5gs puis gedit amf.yaml
mettre la même adresse dans gnb_zmq.yaml que celle dans amf.yml (addr et bind_addr ne pas changer le port)
Dans amf.yaml mettre tous les mcc à 001 et les mnc à 01 et mettre le tac à 7
Enregister et fermer les deux fichiers
Toujours dans /etc/open5gs gedit nrf.yaml mettre le mcc à 001 et le mnc à 01 puis enregistrer et fermer
cd

sudo systemctl restart open5gs-*
sudo mv gnb_zmq.yaml srsRAN_rep/srsRAN_Project/build/app/gnb
sudo mv ue_zmq.conf srsRAN_rep/srsRAN_4G/build/srsue/src


cd srsRAN_rep/srsRAN_4G/build/srsue/src
sudo ./srsue ue_zmq.conf

deuxième terminal
cd srsRAN_rep/srsRAN_Project/build/apps/gnb
sudo ip netns add ue1
sudo ./gnb -c ./gnb_zmq.yaml

